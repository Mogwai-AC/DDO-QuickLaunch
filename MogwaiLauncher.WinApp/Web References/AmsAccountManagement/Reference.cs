//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace MogwaiLauncher.WinApp.AmsAccountManagement {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AmsAccountManagementSoap", Namespace="http://www.turbine.com/SE/AMS")]
    public partial class AmsAccountManagement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnableAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetNewPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAccountByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAccountByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountNameExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumerateAccountsByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumerateFilteredAccountsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AmsAccountManagement() {
            this.Url = global::MogwaiLauncher.WinApp.Properties.Settings.Default.LocalLauncher_WinApp_AmsAccountManagement_AmsAccountManagement;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateAccountCompletedEventHandler CreateAccountCompleted;
        
        /// <remarks/>
        public event UpdateAccountCompletedEventHandler UpdateAccountCompleted;
        
        /// <remarks/>
        public event EnableAccountCompletedEventHandler EnableAccountCompleted;
        
        /// <remarks/>
        public event SetPasswordCompletedEventHandler SetPasswordCompleted;
        
        /// <remarks/>
        public event SetNewPasswordCompletedEventHandler SetNewPasswordCompleted;
        
        /// <remarks/>
        public event RetrieveAccountByIdCompletedEventHandler RetrieveAccountByIdCompleted;
        
        /// <remarks/>
        public event RetrieveAccountByNameCompletedEventHandler RetrieveAccountByNameCompleted;
        
        /// <remarks/>
        public event AccountNameExistsCompletedEventHandler AccountNameExistsCompleted;
        
        /// <remarks/>
        public event EnumerateAccountsByEmailCompletedEventHandler EnumerateAccountsByEmailCompleted;
        
        /// <remarks/>
        public event EnumerateFilteredAccountsCompletedEventHandler EnumerateFilteredAccountsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.turbine.com/SE/AMS/CreateAccount", RequestNamespace="http://www.turbine.com/SE/AMS", ResponseNamespace="http://www.turbine.com/SE/AMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountInformation CreateAccount(string ticket, NewAccountInformation accountInfo) {
            object[] results = this.Invoke("CreateAccount", new object[] {
                        ticket,
                        accountInfo});
            return ((AccountInformation)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAccountAsync(string ticket, NewAccountInformation accountInfo) {
            this.CreateAccountAsync(ticket, accountInfo, null);
        }
        
        /// <remarks/>
        public void CreateAccountAsync(string ticket, NewAccountInformation accountInfo, object userState) {
            if ((this.CreateAccountOperationCompleted == null)) {
                this.CreateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAccountOperationCompleted);
            }
            this.InvokeAsync("CreateAccount", new object[] {
                        ticket,
                        accountInfo}, this.CreateAccountOperationCompleted, userState);
        }
        
        private void OnCreateAccountOperationCompleted(object arg) {
            if ((this.CreateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAccountCompleted(this, new CreateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.turbine.com/SE/AMS/UpdateAccount", RequestNamespace="http://www.turbine.com/SE/AMS", ResponseNamespace="http://www.turbine.com/SE/AMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAccount(string ticket, string name, UpdatedAccountInformation accountInfo) {
            this.Invoke("UpdateAccount", new object[] {
                        ticket,
                        name,
                        accountInfo});
        }
        
        /// <remarks/>
        public void UpdateAccountAsync(string ticket, string name, UpdatedAccountInformation accountInfo) {
            this.UpdateAccountAsync(ticket, name, accountInfo, null);
        }
        
        /// <remarks/>
        public void UpdateAccountAsync(string ticket, string name, UpdatedAccountInformation accountInfo, object userState) {
            if ((this.UpdateAccountOperationCompleted == null)) {
                this.UpdateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountOperationCompleted);
            }
            this.InvokeAsync("UpdateAccount", new object[] {
                        ticket,
                        name,
                        accountInfo}, this.UpdateAccountOperationCompleted, userState);
        }
        
        private void OnUpdateAccountOperationCompleted(object arg) {
            if ((this.UpdateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.turbine.com/SE/AMS/EnableAccount", RequestNamespace="http://www.turbine.com/SE/AMS", ResponseNamespace="http://www.turbine.com/SE/AMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EnableAccount(string ticket, string accountName, bool enable) {
            this.Invoke("EnableAccount", new object[] {
                        ticket,
                        accountName,
                        enable});
        }
        
        /// <remarks/>
        public void EnableAccountAsync(string ticket, string accountName, bool enable) {
            this.EnableAccountAsync(ticket, accountName, enable, null);
        }
        
        /// <remarks/>
        public void EnableAccountAsync(string ticket, string accountName, bool enable, object userState) {
            if ((this.EnableAccountOperationCompleted == null)) {
                this.EnableAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnableAccountOperationCompleted);
            }
            this.InvokeAsync("EnableAccount", new object[] {
                        ticket,
                        accountName,
                        enable}, this.EnableAccountOperationCompleted, userState);
        }
        
        private void OnEnableAccountOperationCompleted(object arg) {
            if ((this.EnableAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnableAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.turbine.com/SE/AMS/SetPassword", RequestNamespace="http://www.turbine.com/SE/AMS", ResponseNamespace="http://www.turbine.com/SE/AMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetPassword(string ticket, string accountName, string oldPassword, string newPassword) {
            this.Invoke("SetPassword", new object[] {
                        ticket,
                        accountName,
                        oldPassword,
                        newPassword});
        }
        
        /// <remarks/>
        public void SetPasswordAsync(string ticket, string accountName, string oldPassword, string newPassword) {
            this.SetPasswordAsync(ticket, accountName, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void SetPasswordAsync(string ticket, string accountName, string oldPassword, string newPassword, object userState) {
            if ((this.SetPasswordOperationCompleted == null)) {
                this.SetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPasswordOperationCompleted);
            }
            this.InvokeAsync("SetPassword", new object[] {
                        ticket,
                        accountName,
                        oldPassword,
                        newPassword}, this.SetPasswordOperationCompleted, userState);
        }
        
        private void OnSetPasswordOperationCompleted(object arg) {
            if ((this.SetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.turbine.com/SE/AMS/SetNewPassword", RequestNamespace="http://www.turbine.com/SE/AMS", ResponseNamespace="http://www.turbine.com/SE/AMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetNewPassword(string ticket, string accountName, string newPassword) {
            this.Invoke("SetNewPassword", new object[] {
                        ticket,
                        accountName,
                        newPassword});
        }
        
        /// <remarks/>
        public void SetNewPasswordAsync(string ticket, string accountName, string newPassword) {
            this.SetNewPasswordAsync(ticket, accountName, newPassword, null);
        }
        
        /// <remarks/>
        public void SetNewPasswordAsync(string ticket, string accountName, string newPassword, object userState) {
            if ((this.SetNewPasswordOperationCompleted == null)) {
                this.SetNewPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetNewPasswordOperationCompleted);
            }
            this.InvokeAsync("SetNewPassword", new object[] {
                        ticket,
                        accountName,
                        newPassword}, this.SetNewPasswordOperationCompleted, userState);
        }
        
        private void OnSetNewPasswordOperationCompleted(object arg) {
            if ((this.SetNewPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetNewPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.turbine.com/SE/AMS/RetrieveAccountById", RequestNamespace="http://www.turbine.com/SE/AMS", ResponseNamespace="http://www.turbine.com/SE/AMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountInformation RetrieveAccountById(string ticket, System.Guid accountId) {
            object[] results = this.Invoke("RetrieveAccountById", new object[] {
                        ticket,
                        accountId});
            return ((AccountInformation)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAccountByIdAsync(string ticket, System.Guid accountId) {
            this.RetrieveAccountByIdAsync(ticket, accountId, null);
        }
        
        /// <remarks/>
        public void RetrieveAccountByIdAsync(string ticket, System.Guid accountId, object userState) {
            if ((this.RetrieveAccountByIdOperationCompleted == null)) {
                this.RetrieveAccountByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAccountByIdOperationCompleted);
            }
            this.InvokeAsync("RetrieveAccountById", new object[] {
                        ticket,
                        accountId}, this.RetrieveAccountByIdOperationCompleted, userState);
        }
        
        private void OnRetrieveAccountByIdOperationCompleted(object arg) {
            if ((this.RetrieveAccountByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAccountByIdCompleted(this, new RetrieveAccountByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.turbine.com/SE/AMS/RetrieveAccountByName", RequestNamespace="http://www.turbine.com/SE/AMS", ResponseNamespace="http://www.turbine.com/SE/AMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountInformation RetrieveAccountByName(string ticket, string name) {
            object[] results = this.Invoke("RetrieveAccountByName", new object[] {
                        ticket,
                        name});
            return ((AccountInformation)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAccountByNameAsync(string ticket, string name) {
            this.RetrieveAccountByNameAsync(ticket, name, null);
        }
        
        /// <remarks/>
        public void RetrieveAccountByNameAsync(string ticket, string name, object userState) {
            if ((this.RetrieveAccountByNameOperationCompleted == null)) {
                this.RetrieveAccountByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAccountByNameOperationCompleted);
            }
            this.InvokeAsync("RetrieveAccountByName", new object[] {
                        ticket,
                        name}, this.RetrieveAccountByNameOperationCompleted, userState);
        }
        
        private void OnRetrieveAccountByNameOperationCompleted(object arg) {
            if ((this.RetrieveAccountByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAccountByNameCompleted(this, new RetrieveAccountByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.turbine.com/SE/AMS/AccountNameExists", RequestNamespace="http://www.turbine.com/SE/AMS", ResponseNamespace="http://www.turbine.com/SE/AMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AccountNameExists(string ticket, string name) {
            object[] results = this.Invoke("AccountNameExists", new object[] {
                        ticket,
                        name});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AccountNameExistsAsync(string ticket, string name) {
            this.AccountNameExistsAsync(ticket, name, null);
        }
        
        /// <remarks/>
        public void AccountNameExistsAsync(string ticket, string name, object userState) {
            if ((this.AccountNameExistsOperationCompleted == null)) {
                this.AccountNameExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountNameExistsOperationCompleted);
            }
            this.InvokeAsync("AccountNameExists", new object[] {
                        ticket,
                        name}, this.AccountNameExistsOperationCompleted, userState);
        }
        
        private void OnAccountNameExistsOperationCompleted(object arg) {
            if ((this.AccountNameExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountNameExistsCompleted(this, new AccountNameExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.turbine.com/SE/AMS/EnumerateAccountsByEmail", RequestNamespace="http://www.turbine.com/SE/AMS", ResponseNamespace="http://www.turbine.com/SE/AMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountInformation[] EnumerateAccountsByEmail(string ticket, string eMail) {
            object[] results = this.Invoke("EnumerateAccountsByEmail", new object[] {
                        ticket,
                        eMail});
            return ((AccountInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void EnumerateAccountsByEmailAsync(string ticket, string eMail) {
            this.EnumerateAccountsByEmailAsync(ticket, eMail, null);
        }
        
        /// <remarks/>
        public void EnumerateAccountsByEmailAsync(string ticket, string eMail, object userState) {
            if ((this.EnumerateAccountsByEmailOperationCompleted == null)) {
                this.EnumerateAccountsByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumerateAccountsByEmailOperationCompleted);
            }
            this.InvokeAsync("EnumerateAccountsByEmail", new object[] {
                        ticket,
                        eMail}, this.EnumerateAccountsByEmailOperationCompleted, userState);
        }
        
        private void OnEnumerateAccountsByEmailOperationCompleted(object arg) {
            if ((this.EnumerateAccountsByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumerateAccountsByEmailCompleted(this, new EnumerateAccountsByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.turbine.com/SE/AMS/EnumerateFilteredAccounts", RequestNamespace="http://www.turbine.com/SE/AMS", ResponseNamespace="http://www.turbine.com/SE/AMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountInformation[] EnumerateFilteredAccounts(string ticket, string filter) {
            object[] results = this.Invoke("EnumerateFilteredAccounts", new object[] {
                        ticket,
                        filter});
            return ((AccountInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void EnumerateFilteredAccountsAsync(string ticket, string filter) {
            this.EnumerateFilteredAccountsAsync(ticket, filter, null);
        }
        
        /// <remarks/>
        public void EnumerateFilteredAccountsAsync(string ticket, string filter, object userState) {
            if ((this.EnumerateFilteredAccountsOperationCompleted == null)) {
                this.EnumerateFilteredAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumerateFilteredAccountsOperationCompleted);
            }
            this.InvokeAsync("EnumerateFilteredAccounts", new object[] {
                        ticket,
                        filter}, this.EnumerateFilteredAccountsOperationCompleted, userState);
        }
        
        private void OnEnumerateFilteredAccountsOperationCompleted(object arg) {
            if ((this.EnumerateFilteredAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumerateFilteredAccountsCompleted(this, new EnumerateFilteredAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.turbine.com/SE/AMS")]
    public partial class NewAccountInformation {
        
        private string billingIdField;
        
        private string parentAccountNameField;
        
        private string nameField;
        
        private bool enabledField;
        
        private string authenticationProviderField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private System.DateTime dateOfBirthField;
        
        private string emailField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string countryField;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string primaryPhoneField;
        
        private string secondaryPhoneField;
        
        private char genderField;
        
        private string secretField;
        
        /// <remarks/>
        public string BillingId {
            get {
                return this.billingIdField;
            }
            set {
                this.billingIdField = value;
            }
        }
        
        /// <remarks/>
        public string ParentAccountName {
            get {
                return this.parentAccountNameField;
            }
            set {
                this.parentAccountNameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public string AuthenticationProvider {
            get {
                return this.authenticationProviderField;
            }
            set {
                this.authenticationProviderField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateOfBirth {
            get {
                return this.dateOfBirthField;
            }
            set {
                this.dateOfBirthField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string PrimaryPhone {
            get {
                return this.primaryPhoneField;
            }
            set {
                this.primaryPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string SecondaryPhone {
            get {
                return this.secondaryPhoneField;
            }
            set {
                this.secondaryPhoneField = value;
            }
        }
        
        /// <remarks/>
        public char Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public string Secret {
            get {
                return this.secretField;
            }
            set {
                this.secretField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.turbine.com/SE/AMS")]
    public partial class UpdatedAccountInformation {
        
        private string billingIdField;
        
        private string parentAccountNameField;
        
        private bool enabledField;
        
        private string authenticationProviderField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private System.DateTime dateOfBirthField;
        
        private string emailField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string countryField;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string primaryPhoneField;
        
        private string secondaryPhoneField;
        
        private char genderField;
        
        /// <remarks/>
        public string BillingId {
            get {
                return this.billingIdField;
            }
            set {
                this.billingIdField = value;
            }
        }
        
        /// <remarks/>
        public string ParentAccountName {
            get {
                return this.parentAccountNameField;
            }
            set {
                this.parentAccountNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public string AuthenticationProvider {
            get {
                return this.authenticationProviderField;
            }
            set {
                this.authenticationProviderField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateOfBirth {
            get {
                return this.dateOfBirthField;
            }
            set {
                this.dateOfBirthField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string PrimaryPhone {
            get {
                return this.primaryPhoneField;
            }
            set {
                this.primaryPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string SecondaryPhone {
            get {
                return this.secondaryPhoneField;
            }
            set {
                this.secondaryPhoneField = value;
            }
        }
        
        /// <remarks/>
        public char Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.turbine.com/SE/AMS")]
    public partial class AccountInformation {
        
        private System.Guid accountIdField;
        
        private string amsIdField;
        
        private string billingIdField;
        
        private System.DateTime createdDateTimeField;
        
        private System.DateTime lastUpdatedDateTimeField;
        
        private System.Guid parentAccountIdField;
        
        private string nameField;
        
        private bool enabledField;
        
        private string authenticationProviderField;
        
        private string secretField;
        
        private System.DateTime secretLastChangeDateField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private System.DateTime dateOfBirthField;
        
        private string emailField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string countryField;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string primaryPhoneField;
        
        private string secondaryPhoneField;
        
        private char genderField;
        
        private System.DateTime bannedUntilField;
        
        /// <remarks/>
        public System.Guid AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public string AmsId {
            get {
                return this.amsIdField;
            }
            set {
                this.amsIdField = value;
            }
        }
        
        /// <remarks/>
        public string BillingId {
            get {
                return this.billingIdField;
            }
            set {
                this.billingIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdatedDateTime {
            get {
                return this.lastUpdatedDateTimeField;
            }
            set {
                this.lastUpdatedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ParentAccountId {
            get {
                return this.parentAccountIdField;
            }
            set {
                this.parentAccountIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public string AuthenticationProvider {
            get {
                return this.authenticationProviderField;
            }
            set {
                this.authenticationProviderField = value;
            }
        }
        
        /// <remarks/>
        public string Secret {
            get {
                return this.secretField;
            }
            set {
                this.secretField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SecretLastChangeDate {
            get {
                return this.secretLastChangeDateField;
            }
            set {
                this.secretLastChangeDateField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateOfBirth {
            get {
                return this.dateOfBirthField;
            }
            set {
                this.dateOfBirthField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string PrimaryPhone {
            get {
                return this.primaryPhoneField;
            }
            set {
                this.primaryPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string SecondaryPhone {
            get {
                return this.secondaryPhoneField;
            }
            set {
                this.secondaryPhoneField = value;
            }
        }
        
        /// <remarks/>
        public char Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BannedUntil {
            get {
                return this.bannedUntilField;
            }
            set {
                this.bannedUntilField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CreateAccountCompletedEventHandler(object sender, CreateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountInformation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountInformation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EnableAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SetPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SetNewPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RetrieveAccountByIdCompletedEventHandler(object sender, RetrieveAccountByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAccountByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAccountByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountInformation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountInformation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RetrieveAccountByNameCompletedEventHandler(object sender, RetrieveAccountByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAccountByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAccountByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountInformation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountInformation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AccountNameExistsCompletedEventHandler(object sender, AccountNameExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountNameExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountNameExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EnumerateAccountsByEmailCompletedEventHandler(object sender, EnumerateAccountsByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumerateAccountsByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumerateAccountsByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountInformation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EnumerateFilteredAccountsCompletedEventHandler(object sender, EnumerateFilteredAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumerateFilteredAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumerateFilteredAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountInformation[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591