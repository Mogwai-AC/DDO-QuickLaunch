//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace MogwaiLauncher.WinApp.AmsSubscriptionManagement {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AmsSubscriptionManagementSoap", Namespace="http://www.turbine.com/SE/AMS")]
    public partial class AmsSubscriptionManagement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateSubscriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSubscriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnableSubscriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback BanSubscriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnbanSubscriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveSubscriptionByKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumerateSubscriptionsByAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumerateFilteredSubscriptionsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AmsSubscriptionManagement() {
            this.Url = global::MogwaiLauncher.WinApp.Properties.Settings.Default.LocalLauncher_WinApp_AmsSubscriptionManagement_AmsSubscriptionManagement;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateSubscriptionCompletedEventHandler CreateSubscriptionCompleted;
        
        /// <remarks/>
        public event UpdateSubscriptionCompletedEventHandler UpdateSubscriptionCompleted;
        
        /// <remarks/>
        public event EnableSubscriptionCompletedEventHandler EnableSubscriptionCompleted;
        
        /// <remarks/>
        public event BanSubscriptionCompletedEventHandler BanSubscriptionCompleted;
        
        /// <remarks/>
        public event UnbanSubscriptionCompletedEventHandler UnbanSubscriptionCompleted;
        
        /// <remarks/>
        public event RetrieveSubscriptionByKeyCompletedEventHandler RetrieveSubscriptionByKeyCompleted;
        
        /// <remarks/>
        public event EnumerateSubscriptionsByAccountCompletedEventHandler EnumerateSubscriptionsByAccountCompleted;
        
        /// <remarks/>
        public event EnumerateFilteredSubscriptionsCompletedEventHandler EnumerateFilteredSubscriptionsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.turbine.com/SE/AMS/CreateSubscription", RequestNamespace="http://www.turbine.com/SE/AMS", ResponseNamespace="http://www.turbine.com/SE/AMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SubscriptionInformation CreateSubscription(string ticket, NewSubscriptionInformation subscriptionInfo) {
            object[] results = this.Invoke("CreateSubscription", new object[] {
                        ticket,
                        subscriptionInfo});
            return ((SubscriptionInformation)(results[0]));
        }
        
        /// <remarks/>
        public void CreateSubscriptionAsync(string ticket, NewSubscriptionInformation subscriptionInfo) {
            this.CreateSubscriptionAsync(ticket, subscriptionInfo, null);
        }
        
        /// <remarks/>
        public void CreateSubscriptionAsync(string ticket, NewSubscriptionInformation subscriptionInfo, object userState) {
            if ((this.CreateSubscriptionOperationCompleted == null)) {
                this.CreateSubscriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSubscriptionOperationCompleted);
            }
            this.InvokeAsync("CreateSubscription", new object[] {
                        ticket,
                        subscriptionInfo}, this.CreateSubscriptionOperationCompleted, userState);
        }
        
        private void OnCreateSubscriptionOperationCompleted(object arg) {
            if ((this.CreateSubscriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSubscriptionCompleted(this, new CreateSubscriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.turbine.com/SE/AMS/UpdateSubscription", RequestNamespace="http://www.turbine.com/SE/AMS", ResponseNamespace="http://www.turbine.com/SE/AMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateSubscription(string ticket, string key, UpdatedSubscriptionInformation subscriptionInfo) {
            this.Invoke("UpdateSubscription", new object[] {
                        ticket,
                        key,
                        subscriptionInfo});
        }
        
        /// <remarks/>
        public void UpdateSubscriptionAsync(string ticket, string key, UpdatedSubscriptionInformation subscriptionInfo) {
            this.UpdateSubscriptionAsync(ticket, key, subscriptionInfo, null);
        }
        
        /// <remarks/>
        public void UpdateSubscriptionAsync(string ticket, string key, UpdatedSubscriptionInformation subscriptionInfo, object userState) {
            if ((this.UpdateSubscriptionOperationCompleted == null)) {
                this.UpdateSubscriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSubscriptionOperationCompleted);
            }
            this.InvokeAsync("UpdateSubscription", new object[] {
                        ticket,
                        key,
                        subscriptionInfo}, this.UpdateSubscriptionOperationCompleted, userState);
        }
        
        private void OnUpdateSubscriptionOperationCompleted(object arg) {
            if ((this.UpdateSubscriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSubscriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.turbine.com/SE/AMS/EnableSubscription", RequestNamespace="http://www.turbine.com/SE/AMS", ResponseNamespace="http://www.turbine.com/SE/AMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EnableSubscription(string ticket, string key, bool enable) {
            this.Invoke("EnableSubscription", new object[] {
                        ticket,
                        key,
                        enable});
        }
        
        /// <remarks/>
        public void EnableSubscriptionAsync(string ticket, string key, bool enable) {
            this.EnableSubscriptionAsync(ticket, key, enable, null);
        }
        
        /// <remarks/>
        public void EnableSubscriptionAsync(string ticket, string key, bool enable, object userState) {
            if ((this.EnableSubscriptionOperationCompleted == null)) {
                this.EnableSubscriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnableSubscriptionOperationCompleted);
            }
            this.InvokeAsync("EnableSubscription", new object[] {
                        ticket,
                        key,
                        enable}, this.EnableSubscriptionOperationCompleted, userState);
        }
        
        private void OnEnableSubscriptionOperationCompleted(object arg) {
            if ((this.EnableSubscriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnableSubscriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.turbine.com/SE/AMS/BanSubscription", RequestNamespace="http://www.turbine.com/SE/AMS", ResponseNamespace="http://www.turbine.com/SE/AMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BanSubscription(string ticket, string key, int duration) {
            this.Invoke("BanSubscription", new object[] {
                        ticket,
                        key,
                        duration});
        }
        
        /// <remarks/>
        public void BanSubscriptionAsync(string ticket, string key, int duration) {
            this.BanSubscriptionAsync(ticket, key, duration, null);
        }
        
        /// <remarks/>
        public void BanSubscriptionAsync(string ticket, string key, int duration, object userState) {
            if ((this.BanSubscriptionOperationCompleted == null)) {
                this.BanSubscriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBanSubscriptionOperationCompleted);
            }
            this.InvokeAsync("BanSubscription", new object[] {
                        ticket,
                        key,
                        duration}, this.BanSubscriptionOperationCompleted, userState);
        }
        
        private void OnBanSubscriptionOperationCompleted(object arg) {
            if ((this.BanSubscriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BanSubscriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.turbine.com/SE/AMS/UnbanSubscription", RequestNamespace="http://www.turbine.com/SE/AMS", ResponseNamespace="http://www.turbine.com/SE/AMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnbanSubscription(string ticket, string key) {
            this.Invoke("UnbanSubscription", new object[] {
                        ticket,
                        key});
        }
        
        /// <remarks/>
        public void UnbanSubscriptionAsync(string ticket, string key) {
            this.UnbanSubscriptionAsync(ticket, key, null);
        }
        
        /// <remarks/>
        public void UnbanSubscriptionAsync(string ticket, string key, object userState) {
            if ((this.UnbanSubscriptionOperationCompleted == null)) {
                this.UnbanSubscriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnbanSubscriptionOperationCompleted);
            }
            this.InvokeAsync("UnbanSubscription", new object[] {
                        ticket,
                        key}, this.UnbanSubscriptionOperationCompleted, userState);
        }
        
        private void OnUnbanSubscriptionOperationCompleted(object arg) {
            if ((this.UnbanSubscriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnbanSubscriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.turbine.com/SE/AMS/RetrieveSubscriptionByKey", RequestNamespace="http://www.turbine.com/SE/AMS", ResponseNamespace="http://www.turbine.com/SE/AMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SubscriptionInformation RetrieveSubscriptionByKey(string ticket, string key) {
            object[] results = this.Invoke("RetrieveSubscriptionByKey", new object[] {
                        ticket,
                        key});
            return ((SubscriptionInformation)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveSubscriptionByKeyAsync(string ticket, string key) {
            this.RetrieveSubscriptionByKeyAsync(ticket, key, null);
        }
        
        /// <remarks/>
        public void RetrieveSubscriptionByKeyAsync(string ticket, string key, object userState) {
            if ((this.RetrieveSubscriptionByKeyOperationCompleted == null)) {
                this.RetrieveSubscriptionByKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveSubscriptionByKeyOperationCompleted);
            }
            this.InvokeAsync("RetrieveSubscriptionByKey", new object[] {
                        ticket,
                        key}, this.RetrieveSubscriptionByKeyOperationCompleted, userState);
        }
        
        private void OnRetrieveSubscriptionByKeyOperationCompleted(object arg) {
            if ((this.RetrieveSubscriptionByKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveSubscriptionByKeyCompleted(this, new RetrieveSubscriptionByKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.turbine.com/SE/AMS/EnumerateSubscriptionsByAccount", RequestNamespace="http://www.turbine.com/SE/AMS", ResponseNamespace="http://www.turbine.com/SE/AMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SubscriptionInformation[] EnumerateSubscriptionsByAccount(string ticket, string accountName) {
            object[] results = this.Invoke("EnumerateSubscriptionsByAccount", new object[] {
                        ticket,
                        accountName});
            return ((SubscriptionInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void EnumerateSubscriptionsByAccountAsync(string ticket, string accountName) {
            this.EnumerateSubscriptionsByAccountAsync(ticket, accountName, null);
        }
        
        /// <remarks/>
        public void EnumerateSubscriptionsByAccountAsync(string ticket, string accountName, object userState) {
            if ((this.EnumerateSubscriptionsByAccountOperationCompleted == null)) {
                this.EnumerateSubscriptionsByAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumerateSubscriptionsByAccountOperationCompleted);
            }
            this.InvokeAsync("EnumerateSubscriptionsByAccount", new object[] {
                        ticket,
                        accountName}, this.EnumerateSubscriptionsByAccountOperationCompleted, userState);
        }
        
        private void OnEnumerateSubscriptionsByAccountOperationCompleted(object arg) {
            if ((this.EnumerateSubscriptionsByAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumerateSubscriptionsByAccountCompleted(this, new EnumerateSubscriptionsByAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.turbine.com/SE/AMS/EnumerateFilteredSubscriptions", RequestNamespace="http://www.turbine.com/SE/AMS", ResponseNamespace="http://www.turbine.com/SE/AMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SubscriptionInformation[] EnumerateFilteredSubscriptions(string filter) {
            object[] results = this.Invoke("EnumerateFilteredSubscriptions", new object[] {
                        filter});
            return ((SubscriptionInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void EnumerateFilteredSubscriptionsAsync(string filter) {
            this.EnumerateFilteredSubscriptionsAsync(filter, null);
        }
        
        /// <remarks/>
        public void EnumerateFilteredSubscriptionsAsync(string filter, object userState) {
            if ((this.EnumerateFilteredSubscriptionsOperationCompleted == null)) {
                this.EnumerateFilteredSubscriptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumerateFilteredSubscriptionsOperationCompleted);
            }
            this.InvokeAsync("EnumerateFilteredSubscriptions", new object[] {
                        filter}, this.EnumerateFilteredSubscriptionsOperationCompleted, userState);
        }
        
        private void OnEnumerateFilteredSubscriptionsOperationCompleted(object arg) {
            if ((this.EnumerateFilteredSubscriptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumerateFilteredSubscriptionsCompleted(this, new EnumerateFilteredSubscriptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.turbine.com/SE/AMS")]
    public partial class NewSubscriptionInformation {
        
        private string billingIdField;
        
        private string accountNameField;
        
        private string productField;
        
        private string nameField;
        
        private bool isEnabledField;
        
        private System.DateTime bannedUntilField;
        
        private string subscriptionKeyField;
        
        private string statusField;
        
        private string levelField;
        
        /// <remarks/>
        public string BillingId {
            get {
                return this.billingIdField;
            }
            set {
                this.billingIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public string Product {
            get {
                return this.productField;
            }
            set {
                this.productField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsEnabled {
            get {
                return this.isEnabledField;
            }
            set {
                this.isEnabledField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BannedUntil {
            get {
                return this.bannedUntilField;
            }
            set {
                this.bannedUntilField = value;
            }
        }
        
        /// <remarks/>
        public string SubscriptionKey {
            get {
                return this.subscriptionKeyField;
            }
            set {
                this.subscriptionKeyField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.turbine.com/SE/AMS")]
    public partial class UpdatedSubscriptionInformation {
        
        private string billingIdField;
        
        private string accountNameField;
        
        private string nameField;
        
        private bool isEnabledField;
        
        private System.DateTime bannedUntilField;
        
        /// <remarks/>
        public string BillingId {
            get {
                return this.billingIdField;
            }
            set {
                this.billingIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsEnabled {
            get {
                return this.isEnabledField;
            }
            set {
                this.isEnabledField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BannedUntil {
            get {
                return this.bannedUntilField;
            }
            set {
                this.bannedUntilField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.turbine.com/SE/AMS")]
    public partial class SubscriptionInformation {
        
        private System.Guid subscriptionIdField;
        
        private string amsIdField;
        
        private string billingIdField;
        
        private System.DateTime createdDateTimeField;
        
        private System.DateTime lastUpdatedDateTimeField;
        
        private System.Guid accountIdField;
        
        private System.Guid productIdField;
        
        private string nameField;
        
        private System.DateTime bannedUntilField;
        
        private bool isBannedField;
        
        private bool isEnabledField;
        
        private string subscriptionKeyField;
        
        private string statusField;
        
        private string levelField;
        
        /// <remarks/>
        public System.Guid SubscriptionId {
            get {
                return this.subscriptionIdField;
            }
            set {
                this.subscriptionIdField = value;
            }
        }
        
        /// <remarks/>
        public string AmsId {
            get {
                return this.amsIdField;
            }
            set {
                this.amsIdField = value;
            }
        }
        
        /// <remarks/>
        public string BillingId {
            get {
                return this.billingIdField;
            }
            set {
                this.billingIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdatedDateTime {
            get {
                return this.lastUpdatedDateTimeField;
            }
            set {
                this.lastUpdatedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BannedUntil {
            get {
                return this.bannedUntilField;
            }
            set {
                this.bannedUntilField = value;
            }
        }
        
        /// <remarks/>
        public bool IsBanned {
            get {
                return this.isBannedField;
            }
            set {
                this.isBannedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsEnabled {
            get {
                return this.isEnabledField;
            }
            set {
                this.isEnabledField = value;
            }
        }
        
        /// <remarks/>
        public string SubscriptionKey {
            get {
                return this.subscriptionKeyField;
            }
            set {
                this.subscriptionKeyField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CreateSubscriptionCompletedEventHandler(object sender, CreateSubscriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateSubscriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateSubscriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubscriptionInformation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubscriptionInformation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateSubscriptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EnableSubscriptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void BanSubscriptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UnbanSubscriptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RetrieveSubscriptionByKeyCompletedEventHandler(object sender, RetrieveSubscriptionByKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveSubscriptionByKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveSubscriptionByKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubscriptionInformation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubscriptionInformation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EnumerateSubscriptionsByAccountCompletedEventHandler(object sender, EnumerateSubscriptionsByAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumerateSubscriptionsByAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumerateSubscriptionsByAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubscriptionInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubscriptionInformation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EnumerateFilteredSubscriptionsCompletedEventHandler(object sender, EnumerateFilteredSubscriptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumerateFilteredSubscriptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumerateFilteredSubscriptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubscriptionInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubscriptionInformation[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591